{
  "version": 3,
  "sources": ["../../../../../node_modules/@ng-web-apis/common/fesm2015/ng-web-apis-common.js", "../../../../../node_modules/@ng-web-apis/geolocation/fesm2015/ng-web-apis-geolocation.js"],
  "sourcesContent": ["import { InjectionToken, inject } from '@angular/core';\nimport { Observable, fromEvent } from 'rxjs';\nimport { share, startWith, map, distinctUntilChanged, shareReplay } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\nconst WINDOW = new InjectionToken('An abstraction over global window object', {\n    factory: () => {\n        const { defaultView } = inject(DOCUMENT);\n        if (!defaultView) {\n            throw new Error('Window is not available');\n        }\n        return defaultView;\n    },\n});\n\nconst ANIMATION_FRAME = new InjectionToken('Shared Observable based on `window.requestAnimationFrame`', {\n    factory: () => {\n        const { requestAnimationFrame, cancelAnimationFrame } = inject(WINDOW);\n        const animationFrame$ = new Observable(subscriber => {\n            let id = NaN;\n            const callback = (timestamp) => {\n                subscriber.next(timestamp);\n                id = requestAnimationFrame(callback);\n            };\n            id = requestAnimationFrame(callback);\n            return () => {\n                cancelAnimationFrame(id);\n            };\n        });\n        return animationFrame$.pipe(share());\n    },\n});\n\nconst CACHES = new InjectionToken('An abstraction over window.caches object', {\n    factory: () => inject(WINDOW).caches,\n});\n\nconst CRYPTO = new InjectionToken('An abstraction over window.crypto object', {\n    factory: () => inject(WINDOW).crypto,\n});\n\nconst CSS = new InjectionToken('An abstraction over window.CSS object', {\n    factory: () => inject(WINDOW).CSS || {\n        escape: v => v,\n        supports: () => false,\n    },\n});\n\nconst HISTORY = new InjectionToken('An abstraction over window.history object', {\n    factory: () => inject(WINDOW).history,\n});\n\nconst LOCAL_STORAGE = new InjectionToken('An abstraction over window.localStorage object', {\n    factory: () => inject(WINDOW).localStorage,\n});\n\nconst LOCATION = new InjectionToken('An abstraction over window.location object', {\n    factory: () => inject(WINDOW).location,\n});\n\nconst NAVIGATOR = new InjectionToken('An abstraction over window.navigator object', {\n    factory: () => inject(WINDOW).navigator,\n});\n\nconst MEDIA_DEVICES = new InjectionToken('An abstraction over window.navigator.mediaDevices object', {\n    factory: () => inject(NAVIGATOR).mediaDevices,\n});\n\nconst NETWORK_INFORMATION = new InjectionToken('An abstraction over window.navigator.connection object', {\n    // @ts-ignore\n    factory: () => inject(NAVIGATOR).connection || null,\n});\n\nconst PAGE_VISIBILITY = new InjectionToken('Shared Observable based on `document visibility changed`', {\n    factory: () => {\n        const documentRef = inject(DOCUMENT);\n        return fromEvent(documentRef, 'visibilitychange').pipe(startWith(0), map(() => documentRef.visibilityState !== 'hidden'), distinctUntilChanged(), shareReplay({ refCount: false, bufferSize: 1 }));\n    },\n});\n\nconst PERFORMANCE = new InjectionToken('An abstraction over window.performance object', {\n    factory: () => inject(WINDOW).performance,\n});\n\nconst SCREEN = new InjectionToken('An abstraction over window.screen object', {\n    factory: () => inject(WINDOW).screen,\n});\n\nconst SESSION_STORAGE = new InjectionToken('An abstraction over window.sessionStorage object', {\n    factory: () => inject(WINDOW).sessionStorage,\n});\n\nconst SPEECH_RECOGNITION = new InjectionToken('An abstraction over SpeechRecognition class', {\n    factory: () => {\n        const windowRef = inject(WINDOW);\n        return windowRef.speechRecognition || windowRef.webkitSpeechRecognition || null;\n    },\n});\n\nconst SPEECH_SYNTHESIS = new InjectionToken('An abstraction over window.speechSynthesis object', {\n    factory: () => inject(WINDOW).speechSynthesis,\n});\n\nconst USER_AGENT = new InjectionToken('An abstraction over window.navigator.userAgent object', {\n    factory: () => inject(NAVIGATOR).userAgent,\n});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ANIMATION_FRAME, CACHES, CRYPTO, CSS, HISTORY, LOCAL_STORAGE, LOCATION, MEDIA_DEVICES, NAVIGATOR, NETWORK_INFORMATION, PAGE_VISIBILITY, PERFORMANCE, SCREEN, SESSION_STORAGE, SPEECH_RECOGNITION, SPEECH_SYNTHESIS, USER_AGENT, WINDOW };\n\n", "import * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { finalize, shareReplay } from 'rxjs/operators';\nimport { NAVIGATOR } from '@ng-web-apis/common';\nconst GEOLOCATION = new InjectionToken('An abstraction over window.navigator.geolocation object', {\n  factory: () => inject(NAVIGATOR).geolocation\n});\nconst POSITION_OPTIONS = new InjectionToken('Token for an additional position options', {\n  factory: () => ({})\n});\nconst GEOLOCATION_SUPPORT = new InjectionToken('Is Geolocation API supported?', {\n  factory: () => {\n    return !!inject(GEOLOCATION);\n  }\n});\nclass GeolocationService extends Observable {\n  constructor(geolocationRef, geolocationSupported, positionOptions) {\n    let watchPositionId = 0;\n    super(subscriber => {\n      if (!geolocationSupported) {\n        subscriber.error('Geolocation is not supported in your browser');\n      }\n      watchPositionId = geolocationRef.watchPosition(position => subscriber.next(position), positionError => subscriber.error(positionError), positionOptions);\n    });\n    return this.pipe(finalize(() => geolocationRef.clearWatch(watchPositionId)), shareReplay({\n      bufferSize: 1,\n      refCount: true\n    }));\n  }\n}\nGeolocationService.ɵfac = function GeolocationService_Factory(t) {\n  return new (t || GeolocationService)(i0.ɵɵinject(GEOLOCATION), i0.ɵɵinject(GEOLOCATION_SUPPORT), i0.ɵɵinject(POSITION_OPTIONS));\n};\nGeolocationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GeolocationService,\n  factory: GeolocationService.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GeolocationService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: Geolocation,\n      decorators: [{\n        type: Inject,\n        args: [GEOLOCATION]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [GEOLOCATION_SUPPORT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [POSITION_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Public API Surface of geolocation\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GEOLOCATION, GEOLOCATION_SUPPORT, GeolocationService, POSITION_OPTIONS };\n"],
  "mappings": "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",
  "names": []
}
